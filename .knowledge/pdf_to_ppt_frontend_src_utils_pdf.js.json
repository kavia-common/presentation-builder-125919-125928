{"is_source_file": true, "format": "JavaScript", "description": "This file provides a utility function to convert PDF files into images by rendering each page onto a canvas and exporting it as a data URL. It configures the pdf.js worker for browser environments and exposes a main function `pdfToImages` that processes a PDF File object.", "external_files": ["pdfjs-dist"], "external_methods": ["GlobalWorkerOptions.workerSrc", "getDocument", "pdf.getPage", "page.getViewport", "page.render"], "published": ["pdfToImages"], "classes": [], "methods": [{"name": "pdfToImages(pdfFile, maxWidth = 1024)", "description": "Converts a PDF File into an array of page images represented as data URLs, with optional maximum width scaling.", "scope": "", "scopeKind": ""}], "calls": ["pdfFile.arrayBuffer", "getDocument", "loadingTask.promise", "pdf.getPage", "page.getViewport", "page.render", "canvas.toDataURL"], "search-terms": ["pdf.js", "pdfToImages", "Canvas rendering", "pdf manipulation in JavaScript"], "state": 2, "file_id": 13, "knowledge_revision": 37, "git_revision": "", "revision_history": [{"30": ""}, {"37": ""}], "ctags": [{"_type": "tag", "name": "pdfToImages", "path": "/home/kavia/workspace/code-generation/presentation-builder-125919-125928/pdf_to_ppt_frontend/src/utils/pdf.js", "pattern": "/^export async function pdfToImages(pdfFile, maxWidth = 1024) {$/", "language": "JavaScript", "kind": "function", "signature": "(pdfFile, maxWidth = 1024)"}], "hash": "4cc91d426038605dea3a847c6c2286ec", "format-version": 4, "code-base-name": "pdf_to_ppt_frontend", "filename": "pdf_to_ppt_frontend/src/utils/pdf.js"}